{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\manage-employees\\\\src\\\\context\\\\EmployeeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\n\nconst EmployeeContextProvider = props => {\n  _s();\n\n  const [employees, setEmployees] = useState([{\n    id: uuidv4(),\n    name: 'Thomas Hardy10',\n    email: 'thomashardy@mail.com',\n    address: '89 Chiaroscuro Rd, Portland, USA',\n    phone: '(171) 555-2222'\n  }, {\n    id: uuidv4(),\n    name: 'Dominique Perrier',\n    email: 'dominiqueperrier@mail.com',\n    address: 'Obere Str. 57, Berlin, Germany',\n    phone: '(313) 555-5735'\n  }, {\n    id: uuidv4(),\n    name: 'Maria Anders',\n    email: 'mariaanders@mail.com',\n    address: '25, rue Lauriston, Paris, France',\n    phone: '(503) 555-9931'\n  }, {\n    id: uuidv4(),\n    name: 'Fran Wilson',\n    email: 'franwilson@mail.com',\n    address: 'C/ Araquil, 67, Madrid, Spain',\n    phone: '(204) 619-5731'\n  }, {\n    id: uuidv4(),\n    name: 'Martin Blank',\n    email: 'martinblank@mail.com',\n    address: 'Via Monte Bianco 34, Turin, Italy',\n    phone: '(480) 631-2097'\n  }]);\n  const sortedEmployees = employees.sort((a, b) => a.name < b.name ? -1 : 1); // addEmployee function takes 4 properties and returns a setEmployees (state) with 5 properties\n\n  const addEmployee = (name, email, address, phone) => {\n    // setEmployees is an object so must enclose properties in curly brackets\n    // add into the array using brackets...(read)employees (our array of users)\n    setEmployees([...employees, {\n      id: uuidv4(),\n      name,\n      email,\n      address,\n      phone\n    }]);\n  };\n\n  const deleteEmployee = id => {\n    setEmployees(employees.filter(employee => employee.id !== id));\n  };\n\n  const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(employees.map(employee => employee.id === id ? updatedEmployee : employee));\n  }; // In the EmployeeContext.Provider we provide the values of (state) employees and addEmployee\n\n\n  return (\n    /*#__PURE__*/\n    // <EmployeeContext.Provider value={{employees, addEmployee, deleteEmployee, updateEmployee}}>\n    _jsxDEV(EmployeeContext.Provider, {\n      value: {\n        sortedEmployees,\n        addEmployee,\n        deleteEmployee,\n        updateEmployee\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(EmployeeContextProvider, \"EMb9OcCfK4RAp+uwOzYPWOqhsfk=\");\n\n_c = EmployeeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeContextProvider\");","map":{"version":3,"sources":["C:/Users/admin/manage-employees/src/context/EmployeeContext.js"],"names":["createContext","useState","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","employees","setEmployees","id","name","email","address","phone","sortedEmployees","sort","a","b","addEmployee","deleteEmployee","filter","employee","updateEmployee","updatedEmployee","map","children"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;;AAEP,MAAMK,uBAAuB,GAAKC,KAAD,IAAW;AAAA;;AAExC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CACvC;AAACQ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,gBAApB;AAAsCC,IAAAA,KAAK,EAAE,sBAA7C;AAAqEC,IAAAA,OAAO,EAAE,kCAA9E;AAAkHC,IAAAA,KAAK,EAAE;AAAzH,GADuC,EAEvC;AAACJ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,mBAApB;AAAyCC,IAAAA,KAAK,EAAE,2BAAhD;AAA6EC,IAAAA,OAAO,EAAE,gCAAtF;AAAwHC,IAAAA,KAAK,EAAE;AAA/H,GAFuC,EAGvC;AAACJ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,cAApB;AAAoCC,IAAAA,KAAK,EAAE,sBAA3C;AAAmEC,IAAAA,OAAO,EAAE,kCAA5E;AAAgHC,IAAAA,KAAK,EAAE;AAAvH,GAHuC,EAIvC;AAACJ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,aAApB;AAAmCC,IAAAA,KAAK,EAAE,qBAA1C;AAAiEC,IAAAA,OAAO,EAAE,+BAA1E;AAA2GC,IAAAA,KAAK,EAAE;AAAlH,GAJuC,EAKvC;AAACJ,IAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,IAAAA,IAAI,EAAE,cAApB;AAAoCC,IAAAA,KAAK,EAAE,sBAA3C;AAAmEC,IAAAA,OAAO,EAAE,mCAA5E;AAAiHC,IAAAA,KAAK,EAAE;AAAxH,GALuC,CAAD,CAA1C;AAQJ,QAAMC,eAAe,GAAGP,SAAS,CAACQ,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAAQD,CAAC,CAACN,IAAF,GAASO,CAAC,CAACP,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA9C,CAAxB,CAV4C,CAY5C;;AACA,QAAMQ,WAAW,GAAG,CAACR,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,KAAvB,KAAiC;AACjD;AACA;AACAL,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAACE,MAAAA,EAAE,EAACN,MAAM,EAAV;AAAcO,MAAAA,IAAd;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,OAA3B;AAAoCC,MAAAA;AAApC,KAAf,CAAD,CAAZ;AACH,GAJD;;AAMA,QAAMM,cAAc,GAAIV,EAAD,IAAQ;AAC3BD,IAAAA,YAAY,CAACD,SAAS,CAACa,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACZ,EAAT,KAAgBA,EAA7C,CAAD,CAAZ;AACH,GAFD;;AAIA,QAAMa,cAAc,GAAG,CAACb,EAAD,EAAKc,eAAL,KAAyB;AAC5Cf,IAAAA,YAAY,CAACD,SAAS,CAACiB,GAAV,CAAeH,QAAD,IAAcA,QAAQ,CAACZ,EAAT,KAAgBA,EAAhB,GAAqBc,eAArB,GAAuCF,QAAnE,CAAD,CAAZ;AACH,GAFD,CAvB4C,CA2B5C;;;AACI;AAAA;AACI;AACA,YAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACP,QAAAA,eAAD;AAAkBI,QAAAA,WAAlB;AAA+BC,QAAAA,cAA/B;AAA+CG,QAAAA;AAA/C,OAAjC;AAAA,gBACKhB,KAAK,CAACmB;AADX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMH,CAlCD;;GAAMpB,uB;;KAAAA,uB;AAoCN,eAAeA,uBAAf","sourcesContent":["import {createContext, useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const EmployeeContext = createContext();\r\n\r\nconst EmployeeContextProvider  = (props) => {\r\n\r\n    const [employees, setEmployees] = useState([\r\n        {id:uuidv4(), name: 'Thomas Hardy10', email: 'thomashardy@mail.com', address: '89 Chiaroscuro Rd, Portland, USA', phone: '(171) 555-2222'},\r\n        {id:uuidv4(), name: 'Dominique Perrier', email: 'dominiqueperrier@mail.com', address: 'Obere Str. 57, Berlin, Germany', phone: '(313) 555-5735'},\r\n        {id:uuidv4(), name: 'Maria Anders', email: 'mariaanders@mail.com', address: '25, rue Lauriston, Paris, France', phone: '(503) 555-9931'},\r\n        {id:uuidv4(), name: 'Fran Wilson', email: 'franwilson@mail.com', address: 'C/ Araquil, 67, Madrid, Spain', phone: '(204) 619-5731'},\r\n        {id:uuidv4(), name: 'Martin Blank', email: 'martinblank@mail.com', address: 'Via Monte Bianco 34, Turin, Italy', phone: '(480) 631-2097'}\r\n])\r\n\r\nconst sortedEmployees = employees.sort((a,b)=>(a.name < b.name ? -1 : 1));\r\n\r\n// addEmployee function takes 4 properties and returns a setEmployees (state) with 5 properties\r\nconst addEmployee = (name, email, address, phone) => {\r\n    // setEmployees is an object so must enclose properties in curly brackets\r\n    // add into the array using brackets...(read)employees (our array of users)\r\n    setEmployees([...employees, {id:uuidv4(), name, email, address, phone}])\r\n}\r\n\r\nconst deleteEmployee = (id) => {\r\n    setEmployees(employees.filter(employee => employee.id !== id))\r\n}\r\n\r\nconst updateEmployee = (id, updatedEmployee) => {\r\n    setEmployees(employees.map((employee) => employee.id === id ? updatedEmployee : employee))\r\n}\r\n\r\n// In the EmployeeContext.Provider we provide the values of (state) employees and addEmployee\r\n    return (\r\n        // <EmployeeContext.Provider value={{employees, addEmployee, deleteEmployee, updateEmployee}}>\r\n        <EmployeeContext.Provider value={{sortedEmployees, addEmployee, deleteEmployee, updateEmployee}}>\r\n            {props.children}\r\n        </EmployeeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default EmployeeContextProvider;"]},"metadata":{},"sourceType":"module"}