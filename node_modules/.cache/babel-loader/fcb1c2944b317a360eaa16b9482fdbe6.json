{"ast":null,"code":"import _slicedToArray from\"C:/Users/admin/manage-employees/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var EmployeeContext=/*#__PURE__*/createContext();var EmployeeContextProvider=function EmployeeContextProvider(props){var _useState=useState([{id:1,name:'Thomas Hardy',email:'thomashardy@mail.com',address:'89 Chiaroscuro Rd, Portland, USA',phone:'(171) 555-2222'},{id:2,name:'Dominique Perrier',email:'dominiqueperrier@mail.com',address:'Obere Str. 57, Berlin, Germany',phone:'(313) 555-5735'},{id:3,name:'Maria Anders',email:'mariaanders@mail.com',address:'25, rue Lauriston, Paris, France',phone:'(503) 555-9931'},{id:4,name:'Fran Wilson',email:'franwilson@mail.com',address:'C/ Araquil, 67, Madrid, Spain',phone:'(204) 619-5731'},{id:5,name:'Martin Blank',email:'martinblank@mail.com',address:'Via Monte Bianco 34, Turin, Italy',phone:'(480) 631-2097'}]),_useState2=_slicedToArray(_useState,1),employees=_useState2[0];return/*#__PURE__*/_jsx(EmployeeContext.Provider,{value:employees,children:props.children});};export default EmployeeContextProvider;","map":{"version":3,"sources":["C:/Users/admin/manage-employees/src/context/EmployeeContext.js"],"names":["createContext","useState","EmployeeContext","EmployeeContextProvider","props","id","name","email","address","phone","employees","children"],"mappings":"qHAAA,OAASA,aAAT,CAAwBC,QAAxB,KAAwC,OAAxC,C,2CAEA,MAAO,IAAMC,CAAAA,eAAe,cAAGF,aAAa,EAArC,CAEP,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAW,CAEnC,cAAoBH,QAAQ,CAAC,CACzB,CAACI,EAAE,CAAC,CAAJ,CAAOC,IAAI,CAAE,cAAb,CAA6BC,KAAK,CAAE,sBAApC,CAA4DC,OAAO,CAAE,kCAArE,CAAyGC,KAAK,CAAE,gBAAhH,CADyB,CAEzB,CAACJ,EAAE,CAAC,CAAJ,CAAOC,IAAI,CAAE,mBAAb,CAAkCC,KAAK,CAAE,2BAAzC,CAAsEC,OAAO,CAAE,gCAA/E,CAAiHC,KAAK,CAAE,gBAAxH,CAFyB,CAGzB,CAACJ,EAAE,CAAC,CAAJ,CAAOC,IAAI,CAAE,cAAb,CAA6BC,KAAK,CAAE,sBAApC,CAA4DC,OAAO,CAAE,kCAArE,CAAyGC,KAAK,CAAE,gBAAhH,CAHyB,CAIzB,CAACJ,EAAE,CAAC,CAAJ,CAAOC,IAAI,CAAE,aAAb,CAA4BC,KAAK,CAAE,qBAAnC,CAA0DC,OAAO,CAAE,+BAAnE,CAAoGC,KAAK,CAAE,gBAA3G,CAJyB,CAKzB,CAACJ,EAAE,CAAC,CAAJ,CAAOC,IAAI,CAAE,cAAb,CAA6BC,KAAK,CAAE,sBAApC,CAA4DC,OAAO,CAAE,mCAArE,CAA0GC,KAAK,CAAE,gBAAjH,CALyB,CAAD,CAA5B,wCAAOC,SAAP,eAQJ,mBACI,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAGA,SAAlC,UACKN,KAAK,CAACO,QADX,EADJ,CAKH,CAfD,CAiBA,cAAeR,CAAAA,uBAAf","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const EmployeeContext = createContext()\r\n\r\nconst EmployeeContextProvider = (props) => {\r\n    \r\n        const [employees] = useState([\r\n            {id:1, name: 'Thomas Hardy', email: 'thomashardy@mail.com', address: '89 Chiaroscuro Rd, Portland, USA', phone: '(171) 555-2222'},\r\n            {id:2, name: 'Dominique Perrier', email: 'dominiqueperrier@mail.com', address: 'Obere Str. 57, Berlin, Germany', phone: '(313) 555-5735'},\r\n            {id:3, name: 'Maria Anders', email: 'mariaanders@mail.com', address: '25, rue Lauriston, Paris, France', phone: '(503) 555-9931'},\r\n            {id:4, name: 'Fran Wilson', email: 'franwilson@mail.com', address: 'C/ Araquil, 67, Madrid, Spain', phone: '(204) 619-5731'},\r\n            {id:5, name: 'Martin Blank', email: 'martinblank@mail.com', address: 'Via Monte Bianco 34, Turin, Italy', phone: '(480) 631-2097'}\r\n    ])\r\n\r\n    return(\r\n        <EmployeeContext.Provider value={(employees)}>\r\n            {props.children}\r\n        </EmployeeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default EmployeeContextProvider;"]},"metadata":{},"sourceType":"module"}